@page "/plan"
@page "/plan/{idPlan:int}"

@using Entidades;
@using Negocio;
@using CurrieTechnologies.Razor.SweetAlert2

@inject SweetAlertService Swal;
@inject NavigationManager navegacion;

<h2 class="mt-3">@titulo</h2>

<EditForm Model="plan" OnValidSubmit="GuardarPlan">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="mt-4">
        <label class="form-label fw-bold">Descripcion</label>
        <InputText class="form-control" @bind-Value="plan.Desc_plan"></InputText>
        <ValidationMessage For="@(() => plan.Desc_plan)"></ValidationMessage>
    </div>

    <div class="mt-4">
        <label class="form-label fw-bold">Especialidad</label>
        <InputSelect class="form-select" @bind-Value="plan.Id_especialidad">
            @foreach (var especialidad in especialidades)
            {
                <option value="@especialidad.Id_especialidad">@especialidad.Desc_especialidad</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => plan.Id_especialidad)"></ValidationMessage>
    </div>

    <div class="d-flex align-items-center justify-content-end mt-3">
        <a class="btn btn-warning" href="planes">Volver</a>

        <button class="btn btn-primary ms-2" type="submit">
            @btnTexto
        </button>
    </div>

</EditForm>


@code {
    [Parameter]
    public int idPlan { get; set; } = 0;

    string titulo = string.Empty;
    string btnTexto = string.Empty;

    Plan plan = new Plan();
    List<Especialidad> especialidades = new List<Especialidad>(); 

    protected override async Task OnInitializedAsync()
    {
        if (idPlan != 0)
        {
            titulo = "Editar Plan";
            btnTexto = "Actualizar";
            plan = await PlanNegocio.GetOne(idPlan);
        }
        else
        {
            titulo = "Nuevo Plan";
            btnTexto = "Guardar";
        }
        especialidades = (List<Especialidad>) await EspecialidadNegocio.GetAll();
    }

    private async Task GuardarPlan()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Está seguro?",
                Text = "Se guardaran los cambios realizados",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "Cancelar",
                ConfirmButtonText = "Confirmar"
            });

        if (result.IsConfirmed)
        {
            if (idPlan != 0)
            {
                PlanDTO planDTO = new PlanDTO();
                planDTO.Desc_plan = plan.Desc_plan;
                planDTO.Id_especialidad = plan.Id_especialidad;

                await PlanNegocio.Update(idPlan, planDTO);
                await Swal.FireAsync("Plan actualizado", "El plan ha sido actualizado correctamente", SweetAlertIcon.Success);
            }
            else
            {
                if (plan.Id_especialidad == 0)
                {
                    plan.Id_especialidad = especialidades.First().Id_especialidad;
                }
                await PlanNegocio.Add(plan);
                await Swal.FireAsync("Plan creado", "El plan ha sido creado correctamente", SweetAlertIcon.Success);
            }
            navegacion.NavigateTo("/planes");
        }

    }

}
